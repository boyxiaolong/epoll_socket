// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: login.proto

#ifndef PROTOBUF_INCLUDED_login_2eproto
#define PROTOBUF_INCLUDED_login_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_login_2eproto 

namespace protobuf_login_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_login_2eproto
namespace example {
class Login;
class LoginDefaultTypeInternal;
extern LoginDefaultTypeInternal _Login_default_instance_;
}  // namespace example
namespace google {
namespace protobuf {
template<> ::example::Login* Arena::CreateMaybeMessage<::example::Login>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace example {

enum MsgNum {
  eMsgToSFromC_Begin = 0,
  eMsgToSFromC_Login = 1,
  eMsgToSFromC_End = 999,
  MsgNum_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MsgNum_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MsgNum_IsValid(int value);
const MsgNum MsgNum_MIN = eMsgToSFromC_Begin;
const MsgNum MsgNum_MAX = eMsgToSFromC_End;
const int MsgNum_ARRAYSIZE = MsgNum_MAX + 1;

const ::google::protobuf::EnumDescriptor* MsgNum_descriptor();
inline const ::std::string& MsgNum_Name(MsgNum value) {
  return ::google::protobuf::internal::NameOfEnum(
    MsgNum_descriptor(), value);
}
inline bool MsgNum_Parse(
    const ::std::string& name, MsgNum* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MsgNum>(
    MsgNum_descriptor(), name, value);
}
// ===================================================================

class Login : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:example.Login) */ {
 public:
  Login();
  virtual ~Login();

  Login(const Login& from);

  inline Login& operator=(const Login& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Login(Login&& from) noexcept
    : Login() {
    *this = ::std::move(from);
  }

  inline Login& operator=(Login&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Login& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Login* internal_default_instance() {
    return reinterpret_cast<const Login*>(
               &_Login_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Login* other);
  friend void swap(Login& a, Login& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Login* New() const final {
    return CreateMaybeMessage<Login>(NULL);
  }

  Login* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Login>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Login& from);
  void MergeFrom(const Login& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Login* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string account_id = 2;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 2;
  const ::std::string& account_id() const;
  void set_account_id(const ::std::string& value);
  #if LANG_CXX11
  void set_account_id(::std::string&& value);
  #endif
  void set_account_id(const char* value);
  void set_account_id(const char* value, size_t size);
  ::std::string* mutable_account_id();
  ::std::string* release_account_id();
  void set_allocated_account_id(::std::string* account_id);

  // int64 device_id = 3;
  void clear_device_id();
  static const int kDeviceIdFieldNumber = 3;
  ::google::protobuf::int64 device_id() const;
  void set_device_id(::google::protobuf::int64 value);

  // .example.MsgNum msg_id = 1;
  void clear_msg_id();
  static const int kMsgIdFieldNumber = 1;
  ::example::MsgNum msg_id() const;
  void set_msg_id(::example::MsgNum value);

  // @@protoc_insertion_point(class_scope:example.Login)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr account_id_;
  ::google::protobuf::int64 device_id_;
  int msg_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_login_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Login

// .example.MsgNum msg_id = 1;
inline void Login::clear_msg_id() {
  msg_id_ = 0;
}
inline ::example::MsgNum Login::msg_id() const {
  // @@protoc_insertion_point(field_get:example.Login.msg_id)
  return static_cast< ::example::MsgNum >(msg_id_);
}
inline void Login::set_msg_id(::example::MsgNum value) {
  
  msg_id_ = value;
  // @@protoc_insertion_point(field_set:example.Login.msg_id)
}

// string account_id = 2;
inline void Login::clear_account_id() {
  account_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Login::account_id() const {
  // @@protoc_insertion_point(field_get:example.Login.account_id)
  return account_id_.GetNoArena();
}
inline void Login::set_account_id(const ::std::string& value) {
  
  account_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:example.Login.account_id)
}
#if LANG_CXX11
inline void Login::set_account_id(::std::string&& value) {
  
  account_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:example.Login.account_id)
}
#endif
inline void Login::set_account_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  account_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:example.Login.account_id)
}
inline void Login::set_account_id(const char* value, size_t size) {
  
  account_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:example.Login.account_id)
}
inline ::std::string* Login::mutable_account_id() {
  
  // @@protoc_insertion_point(field_mutable:example.Login.account_id)
  return account_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Login::release_account_id() {
  // @@protoc_insertion_point(field_release:example.Login.account_id)
  
  return account_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Login::set_allocated_account_id(::std::string* account_id) {
  if (account_id != NULL) {
    
  } else {
    
  }
  account_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account_id);
  // @@protoc_insertion_point(field_set_allocated:example.Login.account_id)
}

// int64 device_id = 3;
inline void Login::clear_device_id() {
  device_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Login::device_id() const {
  // @@protoc_insertion_point(field_get:example.Login.device_id)
  return device_id_;
}
inline void Login::set_device_id(::google::protobuf::int64 value) {
  
  device_id_ = value;
  // @@protoc_insertion_point(field_set:example.Login.device_id)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace example

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::example::MsgNum> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::example::MsgNum>() {
  return ::example::MsgNum_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_login_2eproto
